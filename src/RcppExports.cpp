// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// dtlz_1
SEXP dtlz_1(arma::vec x, int M);
RcppExport SEXP _smoof_dtlz_1(SEXP xSEXP, SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(dtlz_1(x, M));
    return rcpp_result_gen;
END_RCPP
}
// dtlz_2
SEXP dtlz_2(arma::vec x, int M);
RcppExport SEXP _smoof_dtlz_2(SEXP xSEXP, SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(dtlz_2(x, M));
    return rcpp_result_gen;
END_RCPP
}
// dtlz_3
SEXP dtlz_3(arma::vec x, int M);
RcppExport SEXP _smoof_dtlz_3(SEXP xSEXP, SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(dtlz_3(x, M));
    return rcpp_result_gen;
END_RCPP
}
// dtlz_4
SEXP dtlz_4(arma::vec x, int M, double alpha);
RcppExport SEXP _smoof_dtlz_4(SEXP xSEXP, SEXP MSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type M(MSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(dtlz_4(x, M, alpha));
    return rcpp_result_gen;
END_RCPP
}
// dtlz_5
SEXP dtlz_5(arma::vec x, int M);
RcppExport SEXP _smoof_dtlz_5(SEXP xSEXP, SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(dtlz_5(x, M));
    return rcpp_result_gen;
END_RCPP
}
// dtlz_6
SEXP dtlz_6(arma::vec x, int M);
RcppExport SEXP _smoof_dtlz_6(SEXP xSEXP, SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(dtlz_6(x, M));
    return rcpp_result_gen;
END_RCPP
}
// dtlz_7
SEXP dtlz_7(arma::vec x, int M);
RcppExport SEXP _smoof_dtlz_7(SEXP xSEXP, SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(dtlz_7(x, M));
    return rcpp_result_gen;
END_RCPP
}
// mof_ED_1
NumericVector mof_ED_1(NumericVector x, int m, double gamma, NumericVector theta);
RcppExport SEXP _smoof_mof_ED_1(SEXP xSEXP, SEXP mSEXP, SEXP gammaSEXP, SEXP thetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    rcpp_result_gen = Rcpp::wrap(mof_ED_1(x, m, gamma, theta));
    return rcpp_result_gen;
END_RCPP
}
// mof_ED_2
NumericVector mof_ED_2(NumericVector x, int m, double gamma, NumericVector theta);
RcppExport SEXP _smoof_mof_ED_2(SEXP xSEXP, SEXP mSEXP, SEXP gammaSEXP, SEXP thetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    rcpp_result_gen = Rcpp::wrap(mof_ED_2(x, m, gamma, theta));
    return rcpp_result_gen;
END_RCPP
}
// mof_cec2019_SYM_PART_SIMPLE
NumericVector mof_cec2019_SYM_PART_SIMPLE(NumericVector x, double a, double b, double c);
RcppExport SEXP _smoof_mof_cec2019_SYM_PART_SIMPLE(SEXP xSEXP, SEXP aSEXP, SEXP bSEXP, SEXP cSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    rcpp_result_gen = Rcpp::wrap(mof_cec2019_SYM_PART_SIMPLE(x, a, b, c));
    return rcpp_result_gen;
END_RCPP
}
// mof_cec2019_SYM_PART_ROTATED
NumericVector mof_cec2019_SYM_PART_ROTATED(NumericVector x, double w, double a, double b, double c);
RcppExport SEXP _smoof_mof_cec2019_SYM_PART_ROTATED(SEXP xSEXP, SEXP wSEXP, SEXP aSEXP, SEXP bSEXP, SEXP cSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type w(wSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type c(cSEXP);
    rcpp_result_gen = Rcpp::wrap(mof_cec2019_SYM_PART_ROTATED(x, w, a, b, c));
    return rcpp_result_gen;
END_RCPP
}
// mof_cec2019_OMNI_Test
NumericVector mof_cec2019_OMNI_Test(NumericVector x);
RcppExport SEXP _smoof_mof_cec2019_OMNI_Test(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(mof_cec2019_OMNI_Test(x));
    return rcpp_result_gen;
END_RCPP
}
// mof_cec2019_mmf1
NumericVector mof_cec2019_mmf1(NumericVector x);
RcppExport SEXP _smoof_mof_cec2019_mmf1(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(mof_cec2019_mmf1(x));
    return rcpp_result_gen;
END_RCPP
}
// mof_cec2019_mmf1_z
NumericVector mof_cec2019_mmf1_z(NumericVector x, double k);
RcppExport SEXP _smoof_mof_cec2019_mmf1_z(SEXP xSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(mof_cec2019_mmf1_z(x, k));
    return rcpp_result_gen;
END_RCPP
}
// mof_cec2019_mmf1_e
NumericVector mof_cec2019_mmf1_e(NumericVector x, double a);
RcppExport SEXP _smoof_mof_cec2019_mmf1_e(SEXP xSEXP, SEXP aSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    rcpp_result_gen = Rcpp::wrap(mof_cec2019_mmf1_e(x, a));
    return rcpp_result_gen;
END_RCPP
}
// mof_cec2019_mmf2
NumericVector mof_cec2019_mmf2(NumericVector x);
RcppExport SEXP _smoof_mof_cec2019_mmf2(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(mof_cec2019_mmf2(x));
    return rcpp_result_gen;
END_RCPP
}
// mof_cec2019_mmf3
NumericVector mof_cec2019_mmf3(NumericVector x);
RcppExport SEXP _smoof_mof_cec2019_mmf3(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(mof_cec2019_mmf3(x));
    return rcpp_result_gen;
END_RCPP
}
// mof_cec2019_mmf4
NumericVector mof_cec2019_mmf4(NumericVector x);
RcppExport SEXP _smoof_mof_cec2019_mmf4(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(mof_cec2019_mmf4(x));
    return rcpp_result_gen;
END_RCPP
}
// mof_cec2019_mmf5
NumericVector mof_cec2019_mmf5(NumericVector x);
RcppExport SEXP _smoof_mof_cec2019_mmf5(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(mof_cec2019_mmf5(x));
    return rcpp_result_gen;
END_RCPP
}
// mof_cec2019_mmf6
NumericVector mof_cec2019_mmf6(NumericVector x);
RcppExport SEXP _smoof_mof_cec2019_mmf6(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(mof_cec2019_mmf6(x));
    return rcpp_result_gen;
END_RCPP
}
// mof_cec2019_mmf7
NumericVector mof_cec2019_mmf7(NumericVector x);
RcppExport SEXP _smoof_mof_cec2019_mmf7(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(mof_cec2019_mmf7(x));
    return rcpp_result_gen;
END_RCPP
}
// mof_cec2019_mmf8
NumericVector mof_cec2019_mmf8(NumericVector x);
RcppExport SEXP _smoof_mof_cec2019_mmf8(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(mof_cec2019_mmf8(x));
    return rcpp_result_gen;
END_RCPP
}
// mof_cec2019_mmf9
NumericVector mof_cec2019_mmf9(NumericVector x, int np);
RcppExport SEXP _smoof_mof_cec2019_mmf9(SEXP xSEXP, SEXP npSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type np(npSEXP);
    rcpp_result_gen = Rcpp::wrap(mof_cec2019_mmf9(x, np));
    return rcpp_result_gen;
END_RCPP
}
// mof_cec2019_mmf10
NumericVector mof_cec2019_mmf10(NumericVector x);
RcppExport SEXP _smoof_mof_cec2019_mmf10(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(mof_cec2019_mmf10(x));
    return rcpp_result_gen;
END_RCPP
}
// mof_cec2019_mmf11
NumericVector mof_cec2019_mmf11(NumericVector x, int np);
RcppExport SEXP _smoof_mof_cec2019_mmf11(SEXP xSEXP, SEXP npSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type np(npSEXP);
    rcpp_result_gen = Rcpp::wrap(mof_cec2019_mmf11(x, np));
    return rcpp_result_gen;
END_RCPP
}
// mof_cec2019_mmf12
NumericVector mof_cec2019_mmf12(NumericVector x, int np, int q);
RcppExport SEXP _smoof_mof_cec2019_mmf12(SEXP xSEXP, SEXP npSEXP, SEXP qSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type np(npSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    rcpp_result_gen = Rcpp::wrap(mof_cec2019_mmf12(x, np, q));
    return rcpp_result_gen;
END_RCPP
}
// mof_cec2019_mmf13
NumericVector mof_cec2019_mmf13(NumericVector x, int np);
RcppExport SEXP _smoof_mof_cec2019_mmf13(SEXP xSEXP, SEXP npSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type np(npSEXP);
    rcpp_result_gen = Rcpp::wrap(mof_cec2019_mmf13(x, np));
    return rcpp_result_gen;
END_RCPP
}
// mof_cec2019_mmf14
NumericVector mof_cec2019_mmf14(NumericVector x, int M, int np);
RcppExport SEXP _smoof_mof_cec2019_mmf14(SEXP xSEXP, SEXP MSEXP, SEXP npSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type M(MSEXP);
    Rcpp::traits::input_parameter< int >::type np(npSEXP);
    rcpp_result_gen = Rcpp::wrap(mof_cec2019_mmf14(x, M, np));
    return rcpp_result_gen;
END_RCPP
}
// mof_cec2019_mmf14_a
NumericVector mof_cec2019_mmf14_a(NumericVector x, int M, int np);
RcppExport SEXP _smoof_mof_cec2019_mmf14_a(SEXP xSEXP, SEXP MSEXP, SEXP npSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type M(MSEXP);
    Rcpp::traits::input_parameter< int >::type np(npSEXP);
    rcpp_result_gen = Rcpp::wrap(mof_cec2019_mmf14_a(x, M, np));
    return rcpp_result_gen;
END_RCPP
}
// mof_cec2019_mmf15
NumericVector mof_cec2019_mmf15(NumericVector x, int M, int np);
RcppExport SEXP _smoof_mof_cec2019_mmf15(SEXP xSEXP, SEXP MSEXP, SEXP npSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type M(MSEXP);
    Rcpp::traits::input_parameter< int >::type np(npSEXP);
    rcpp_result_gen = Rcpp::wrap(mof_cec2019_mmf15(x, M, np));
    return rcpp_result_gen;
END_RCPP
}
// mof_cec2019_mmf15_a
NumericVector mof_cec2019_mmf15_a(NumericVector x, int M, int np);
RcppExport SEXP _smoof_mof_cec2019_mmf15_a(SEXP xSEXP, SEXP MSEXP, SEXP npSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type M(MSEXP);
    Rcpp::traits::input_parameter< int >::type np(npSEXP);
    rcpp_result_gen = Rcpp::wrap(mof_cec2019_mmf15_a(x, M, np));
    return rcpp_result_gen;
END_RCPP
}
// kursawe
NumericVector kursawe(NumericVector x);
RcppExport SEXP _smoof_kursawe(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(kursawe(x));
    return rcpp_result_gen;
END_RCPP
}
// mof_WFG_1
NumericVector mof_WFG_1(NumericVector z, int M, int k);
RcppExport SEXP _smoof_mof_WFG_1(SEXP zSEXP, SEXP MSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< int >::type M(MSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(mof_WFG_1(z, M, k));
    return rcpp_result_gen;
END_RCPP
}
// mof_WFG_2
NumericVector mof_WFG_2(NumericVector z, int M, int k);
RcppExport SEXP _smoof_mof_WFG_2(SEXP zSEXP, SEXP MSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< int >::type M(MSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(mof_WFG_2(z, M, k));
    return rcpp_result_gen;
END_RCPP
}
// mof_WFG_3
NumericVector mof_WFG_3(NumericVector z, int M, int k);
RcppExport SEXP _smoof_mof_WFG_3(SEXP zSEXP, SEXP MSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< int >::type M(MSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(mof_WFG_3(z, M, k));
    return rcpp_result_gen;
END_RCPP
}
// mof_WFG_4
NumericVector mof_WFG_4(NumericVector z, int M, int k);
RcppExport SEXP _smoof_mof_WFG_4(SEXP zSEXP, SEXP MSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< int >::type M(MSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(mof_WFG_4(z, M, k));
    return rcpp_result_gen;
END_RCPP
}
// mof_WFG_5
NumericVector mof_WFG_5(NumericVector z, int M, int k);
RcppExport SEXP _smoof_mof_WFG_5(SEXP zSEXP, SEXP MSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< int >::type M(MSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(mof_WFG_5(z, M, k));
    return rcpp_result_gen;
END_RCPP
}
// mof_WFG_6
NumericVector mof_WFG_6(NumericVector z, int M, int k);
RcppExport SEXP _smoof_mof_WFG_6(SEXP zSEXP, SEXP MSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< int >::type M(MSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(mof_WFG_6(z, M, k));
    return rcpp_result_gen;
END_RCPP
}
// mof_WFG_7
NumericVector mof_WFG_7(NumericVector z, int M, int k);
RcppExport SEXP _smoof_mof_WFG_7(SEXP zSEXP, SEXP MSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< int >::type M(MSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(mof_WFG_7(z, M, k));
    return rcpp_result_gen;
END_RCPP
}
// mof_WFG_8
NumericVector mof_WFG_8(NumericVector z, int M, int k);
RcppExport SEXP _smoof_mof_WFG_8(SEXP zSEXP, SEXP MSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< int >::type M(MSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(mof_WFG_8(z, M, k));
    return rcpp_result_gen;
END_RCPP
}
// mof_WFG_9
NumericVector mof_WFG_9(NumericVector z, int M, int k);
RcppExport SEXP _smoof_mof_WFG_9(SEXP zSEXP, SEXP MSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< int >::type M(MSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(mof_WFG_9(z, M, k));
    return rcpp_result_gen;
END_RCPP
}
// evaluate_nk_landscape
NumericVector evaluate_nk_landscape(Rcpp::List values, Rcpp::List links, IntegerVector x);
RcppExport SEXP _smoof_evaluate_nk_landscape(SEXP valuesSEXP, SEXP linksSEXP, SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type values(valuesSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type links(linksSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(evaluate_nk_landscape(values, links, x));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP evaluateBBOBFunctionCPP(void *, void *, void *, void *);
RcppExport SEXP evaluateUFFunction(void *, void *, void *);
RcppExport SEXP getOptimumForBBOBFunctionCPP(void *, void *, void *);
RcppExport SEXP mof_bk1(void *);
RcppExport SEXP mof_MOP1(void *);
RcppExport SEXP mof_MOP2(void *);
RcppExport SEXP mof_MOP3(void *);
RcppExport SEXP mof_MOP4(void *);
RcppExport SEXP mof_MOP5(void *);
RcppExport SEXP mof_MOP6(void *);
RcppExport SEXP mof_MOP7(void *);
RcppExport SEXP mof_viennet(void *);

static const R_CallMethodDef CallEntries[] = {
    {"_smoof_dtlz_1", (DL_FUNC) &_smoof_dtlz_1, 2},
    {"_smoof_dtlz_2", (DL_FUNC) &_smoof_dtlz_2, 2},
    {"_smoof_dtlz_3", (DL_FUNC) &_smoof_dtlz_3, 2},
    {"_smoof_dtlz_4", (DL_FUNC) &_smoof_dtlz_4, 3},
    {"_smoof_dtlz_5", (DL_FUNC) &_smoof_dtlz_5, 2},
    {"_smoof_dtlz_6", (DL_FUNC) &_smoof_dtlz_6, 2},
    {"_smoof_dtlz_7", (DL_FUNC) &_smoof_dtlz_7, 2},
    {"_smoof_mof_ED_1", (DL_FUNC) &_smoof_mof_ED_1, 4},
    {"_smoof_mof_ED_2", (DL_FUNC) &_smoof_mof_ED_2, 4},
    {"_smoof_mof_cec2019_SYM_PART_SIMPLE", (DL_FUNC) &_smoof_mof_cec2019_SYM_PART_SIMPLE, 4},
    {"_smoof_mof_cec2019_SYM_PART_ROTATED", (DL_FUNC) &_smoof_mof_cec2019_SYM_PART_ROTATED, 5},
    {"_smoof_mof_cec2019_OMNI_Test", (DL_FUNC) &_smoof_mof_cec2019_OMNI_Test, 1},
    {"_smoof_mof_cec2019_mmf1", (DL_FUNC) &_smoof_mof_cec2019_mmf1, 1},
    {"_smoof_mof_cec2019_mmf1_z", (DL_FUNC) &_smoof_mof_cec2019_mmf1_z, 2},
    {"_smoof_mof_cec2019_mmf1_e", (DL_FUNC) &_smoof_mof_cec2019_mmf1_e, 2},
    {"_smoof_mof_cec2019_mmf2", (DL_FUNC) &_smoof_mof_cec2019_mmf2, 1},
    {"_smoof_mof_cec2019_mmf3", (DL_FUNC) &_smoof_mof_cec2019_mmf3, 1},
    {"_smoof_mof_cec2019_mmf4", (DL_FUNC) &_smoof_mof_cec2019_mmf4, 1},
    {"_smoof_mof_cec2019_mmf5", (DL_FUNC) &_smoof_mof_cec2019_mmf5, 1},
    {"_smoof_mof_cec2019_mmf6", (DL_FUNC) &_smoof_mof_cec2019_mmf6, 1},
    {"_smoof_mof_cec2019_mmf7", (DL_FUNC) &_smoof_mof_cec2019_mmf7, 1},
    {"_smoof_mof_cec2019_mmf8", (DL_FUNC) &_smoof_mof_cec2019_mmf8, 1},
    {"_smoof_mof_cec2019_mmf9", (DL_FUNC) &_smoof_mof_cec2019_mmf9, 2},
    {"_smoof_mof_cec2019_mmf10", (DL_FUNC) &_smoof_mof_cec2019_mmf10, 1},
    {"_smoof_mof_cec2019_mmf11", (DL_FUNC) &_smoof_mof_cec2019_mmf11, 2},
    {"_smoof_mof_cec2019_mmf12", (DL_FUNC) &_smoof_mof_cec2019_mmf12, 3},
    {"_smoof_mof_cec2019_mmf13", (DL_FUNC) &_smoof_mof_cec2019_mmf13, 2},
    {"_smoof_mof_cec2019_mmf14", (DL_FUNC) &_smoof_mof_cec2019_mmf14, 3},
    {"_smoof_mof_cec2019_mmf14_a", (DL_FUNC) &_smoof_mof_cec2019_mmf14_a, 3},
    {"_smoof_mof_cec2019_mmf15", (DL_FUNC) &_smoof_mof_cec2019_mmf15, 3},
    {"_smoof_mof_cec2019_mmf15_a", (DL_FUNC) &_smoof_mof_cec2019_mmf15_a, 3},
    {"_smoof_kursawe", (DL_FUNC) &_smoof_kursawe, 1},
    {"_smoof_mof_WFG_1", (DL_FUNC) &_smoof_mof_WFG_1, 3},
    {"_smoof_mof_WFG_2", (DL_FUNC) &_smoof_mof_WFG_2, 3},
    {"_smoof_mof_WFG_3", (DL_FUNC) &_smoof_mof_WFG_3, 3},
    {"_smoof_mof_WFG_4", (DL_FUNC) &_smoof_mof_WFG_4, 3},
    {"_smoof_mof_WFG_5", (DL_FUNC) &_smoof_mof_WFG_5, 3},
    {"_smoof_mof_WFG_6", (DL_FUNC) &_smoof_mof_WFG_6, 3},
    {"_smoof_mof_WFG_7", (DL_FUNC) &_smoof_mof_WFG_7, 3},
    {"_smoof_mof_WFG_8", (DL_FUNC) &_smoof_mof_WFG_8, 3},
    {"_smoof_mof_WFG_9", (DL_FUNC) &_smoof_mof_WFG_9, 3},
    {"_smoof_evaluate_nk_landscape", (DL_FUNC) &_smoof_evaluate_nk_landscape, 3},
    {"evaluateBBOBFunctionCPP",      (DL_FUNC) &evaluateBBOBFunctionCPP,      4},
    {"evaluateUFFunction",           (DL_FUNC) &evaluateUFFunction,           3},
    {"getOptimumForBBOBFunctionCPP", (DL_FUNC) &getOptimumForBBOBFunctionCPP, 3},
    {"mof_bk1",                      (DL_FUNC) &mof_bk1,                      1},
    {"mof_MOP1",                     (DL_FUNC) &mof_MOP1,                     1},
    {"mof_MOP2",                     (DL_FUNC) &mof_MOP2,                     1},
    {"mof_MOP3",                     (DL_FUNC) &mof_MOP3,                     1},
    {"mof_MOP4",                     (DL_FUNC) &mof_MOP4,                     1},
    {"mof_MOP5",                     (DL_FUNC) &mof_MOP5,                     1},
    {"mof_MOP6",                     (DL_FUNC) &mof_MOP6,                     1},
    {"mof_MOP7",                     (DL_FUNC) &mof_MOP7,                     1},
    {"mof_viennet",                  (DL_FUNC) &mof_viennet,                  1},
    {NULL, NULL, 0}
};

RcppExport void R_init_smoof(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
